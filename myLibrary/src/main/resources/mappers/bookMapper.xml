<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.myLibrary.dao.BookDao">
    <resultMap id="User" type="User">
        <result column="id" property="id" />
        <result column="user_id" property="userId" />
        <result column="user_pw" property="userPw" />
        <result column="user_name" property="userName" />
        <result column="user_grade" property="userGrade" />
    </resultMap>

    <resultMap id="BookCategory" type="BookCategory">
        <result column="category_id" property="categoryId"/>
        <result column="category_name" property="categoryName"/>
    </resultMap>

    <resultMap id="Book" type="Book">
        <result column="book_id" property="bookId"/>
        <result column="book_name" property="bookName"/>
        <result column="book_author" property="bookAuthor"/>
        <result column="book_publisher" property="bookPublisher"/>
        <result column="book_intro" property="bookIntro"/>
        <result column="book_pubdate" property="bookPubDate"/>
        <result column="book_regdate" property="bookRegDate"/>
        <result column="book_img" property="bookImg"/>
        <result column="id" property="id"/>
        <result column="category_id" property="categoryId"/>

        <collection property="user" resultMap="User"/>
        <collection property="bookCategory" resultMap="BookCategory"/>
        <collection property="bookRent" resultMap="BookRent"/>
    </resultMap>

    <resultMap id="BookRent" type="BookRent">
        <result column="rent_id" property="rentId"/>
        <result column="rent_date" property="rentDate"/>
        <result column="rent_status" property="rentStatus"/>
        <result column="id" property="id"/>
        <result column="book_id" property="bookId"/>

        <collection property="user" resultMap="User"/>
        <collection property="book" resultMap="Book"/>
    </resultMap>

    <select id="getBookList" parameterType="map" resultType="Book" resultMap="Book">
        SELECT * FROM (
        SELECT rownum rnum, DATA.* from
        (SELECT b.book_id, b.book_name, b.book_author, b.book_publisher, b.book_intro, b.book_pubdate, TO_char(b.book_regdate, 'YYYY-MM-DD') book_regdate, b.book_img,
        c.category_id, c.category_name
        FROM BOOK b, BOOK_CATEGORY c WHERE b.category_id = c.category_id
        AND b.id = 1
        AND ${searchKey} LIKE '%' || #{searchValue} || '%'
        <if test="categoryId != null">
            AND c.category_id = #{categoryId}
        </if>
        ORDER BY b.book_id DESC) DATA
        )
        <![CDATA[
            WHERE rnum >= #{start} AND rnum <= #{end}
        ]]>
    </select>

    <select id="getDataCount" parameterType="map" resultType="int">
        SELECT NVL(count(*), 0) FROM book b
        INNER JOIN BOOK_CATEGORY c ON b.category_id = c.category_id
        WHERE ${searchKey} LIKE '%' || #{searchValue} || '%'
    </select>

    <select id="getBookRead" parameterType="int" resultType="Book" resultMap="Book">
        SELECT b.book_id, b.book_name, b.book_author, b.book_publisher, b.book_intro, b.book_pubdate, TO_char(b.book_regdate, 'YYYY-MM-DD') book_regdate, b.book_img,
        c.category_id, c.category_name,
        br.rent_status
        FROM BOOK b
        JOIN BOOK_CATEGORY c ON b.category_id = c.category_id
        LEFT JOIN BOOK_RENT br ON b.book_id = br.book_id
        WHERE b.book_ID = #{bookId}
    </select>

    <insert id="insertBook" parameterType="Book">
        insert into Book
        values(book_seq.nextval, #{bookName}, #{bookAuthor}, #{bookPublisher}, #{bookIntro}, #{bookPubDate}, sysdate, #{bookImg}, 1, #{categoryId})
    </insert>

    <update id="updateBook" parameterType="Book">
        UPDATE book SET
        book_name = #{bookName}, book_author = #{bookAuthor}, CATEGORY_ID = #{categoryId}
        WHERE book_id = #{bookId}
    </update>

    <delete id="deleteBook" parameterType="int">
        delete book where book_id = #{bookId}
    </delete>

    <insert id="rentBook" parameterType="BookRent">
        insert into book_rent
        values(book_rent_seq.nextval, sysdate, #{rentStatus}, #{id}, #{bookId})
    </insert>

    <select id="getBookById" parameterType="int" resultMap="Book">
        SELECT b.book_id, b.book_name, b.book_author, b.book_publisher, b.book_intro, b.book_pubdate,
        TO_CHAR(b.book_regdate, 'YYYY-MM-DD') AS book_regdate, b.book_img,
        c.category_id, c.category_name,
        br.rent_id, TO_CHAR(br.rent_date, 'YYYY-MM-DD') AS rent_date, br.rent_status, br.id, br.book_id
        FROM book b
        JOIN book_category c ON b.category_id = c.category_id
        LEFT JOIN book_rent br ON b.book_id = br.book_id
        WHERE b.book_id = #{bookId}
    </select>
</mapper>
